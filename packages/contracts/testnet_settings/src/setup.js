const fs = require("fs");
const crypto = require("crypto");
const nearAPI = require("near-api-js");
const { BN } = require("near-workspaces");

const {
  connect,
  keyStores,
  accountCreator: { UrlAccountCreator },
} = nearAPI;

const testers = [
  '1mateus.testnet',
  'jasso_test_mmc.testnet',
  'jkrowling.testnet',
  'mmctestnet.testnet',
];

const {
  tokenArray,

  deployNft,
  deployGame,
  deployToken,
  createAccount,
  registerContracts,
  deployLockedToken,
} = require("./utils");

const totalClues = 20;

async function testnetSetup() {
  console.log('setup.js: init testnet setup');

  // set connection
  const CREDENTIALS_DIR = "../.near-credentials";
  const keyStore = new keyStores.UnencryptedFileSystemKeyStore(CREDENTIALS_DIR);

  const config = {
    networkId: "testnet",
    nodeUrl: "https://rpc.testnet.near.org",
    walletUrl: "https://wallet.testnet.near.org",
    helperUrl: "https://helper.testnet.near.org",
    explorerUrl: "https://explorer.testnet.near.org",
    deps: { keyStore },
  };

  const near = await connect(config);
  const accountCreator = new UrlAccountCreator(near, config.helperUrl);

  let last_block = await near.connection.provider.block({ finality: "final" });
  let last_block_height = last_block.header.height;

  let execution_data = {
    near,
    keyStore,
    accountCreator,
    config,
    accountMap: {},
    connAccountMap: {},
  };

  const TOKEN_SUPPLY = '1000000000000000000000000000000000';

  const random_prefix = crypto.randomBytes(10).toString("hex");

  execution_data.accountMap = {
    ...execution_data.accountMap,

    prefix: random_prefix,
    last_block_height: last_block_height,

    // Owner
    ownerAccount: random_prefix + "owner.testnet",

    // Fungible Tokens
    usdtTokenAccount: random_prefix + "usdt.testnet",
    nekoTokenAccount: random_prefix + "neko.testnet",
    auroraTokenAccount: random_prefix + "aurora.testnet",

    // Non Fungible Tokens
    pups: random_prefix + "pups.testnet",
    detectives: random_prefix + "detectives.testnet",

    // DEFI
    lockedTokenAccount: random_prefix + "locked_token.testnet",

    // Game
    gameAccount: random_prefix + "game.testnet",
  };

  console.log('setup.js: Create all acountMap accounts');

  execution_data.connAccountMap.ownerAccount = await createAccount(
    execution_data.accountMap.ownerAccount,
    execution_data
  );

  execution_data.connAccountMap.usdtTokenAccount = await createAccount(
    execution_data.accountMap.usdtTokenAccount,
    execution_data
  );

  execution_data.connAccountMap.nekoTokenAccount = await createAccount(
    execution_data.accountMap.nekoTokenAccount,
    execution_data
  );

  execution_data.connAccountMap.auroraTokenAccount = await createAccount(
    execution_data.accountMap.auroraTokenAccount,
    execution_data
  );

  execution_data.connAccountMap.pups = await createAccount(
    execution_data.accountMap.pups,
    execution_data
  );

  execution_data.connAccountMap.detectives = await createAccount(
    execution_data.accountMap.detectives,
    execution_data
  );

  execution_data.connAccountMap.lockedTokenAccount = await createAccount(
    execution_data.accountMap.lockedTokenAccount,
    execution_data
  );

  execution_data.connAccountMap.gameAccount = await createAccount(
    execution_data.accountMap.gameAccount,
    execution_data
  );

  console.log('setup.js: Deploy and initialize Fungible tokens');

  await deployToken(
    'usdtTokenAccount',
    TOKEN_SUPPLY,
    tokenArray[0],
    execution_data,
  );

  await deployToken(
    'nekoTokenAccount',
    TOKEN_SUPPLY,
    tokenArray[1],
    execution_data,
  );

  await deployToken(
    'auroraTokenAccount',
    TOKEN_SUPPLY,
    tokenArray[2],
    execution_data,
  );

  await deployNft(
    'pups',
    {
      spec: "nft-1.0.0",
      name: "Murder Mystery Collection - Undercover Pups",
      symbol: "",
      base_uri: null,
      "icon": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' id='Layer_1' x='0px' y='0px' viewBox='0 0 3200 3200' style='enable-background:new 0 0 3200 3200;' xml:space='preserve'%3E()%3Cstyle type='text/css'%3E.st0%7Bfill:%23DF9826;%7D.st1%7Bfill:%23FF00AE;%7D%3C/style%3E%3Cg%3E%3Cpolygon class='st0' points='203.4,1358.4 233.7,1388.7 306.9,1461.8 380,1388.7 410.3,1358.4 410.3,1556.9 513.8,1556.9 513.8,1212.1 410.3,1212.1 306.9,1315.5 203.4,1212.1 100,1212.1 100,1556.9 203.4,1556.9 '/%3E%3Cpolygon class='st0' points='410.3,1789.4 410.3,1987.9 513.8,1987.9 513.8,1643.1 410.3,1643.1 306.9,1746.6 203.4,1643.1 100,1643.1 100,1987.9 203.4,1987.9 203.4,1789.4 233.7,1819.7 306.9,1892.8 380,1819.7 '/%3E%3Cpolygon class='st0' points='1600,1987.9 1703.4,1987.9 1703.4,1746.6 1858.6,1746.6 1858.6,1643.1 1703.4,1643.1 1600,1643.1 1444.8,1643.1 1444.8,1746.6 1600,1746.6 '/%3E%3Cpolygon class='st0' points='2237.9,1556.9 2237.9,1453.4 1996.6,1453.4 1996.6,1436.2 2237.9,1436.2 2237.9,1332.8 1996.6,1332.8 1996.6,1315.5 2237.9,1315.5 2237.9,1212.1 1996.6,1212.1 1893.1,1212.1 1893.1,1315.5 1893.1,1332.8 1893.1,1436.2 1893.1,1453.4 1893.1,1556.9 1996.6,1556.9 '/%3E%3Cpolygon class='st0' points='2237.9,1987.9 2237.9,1884.5 1996.6,1884.5 1996.6,1867.2 2237.9,1867.2 2237.9,1763.8 1996.6,1763.8 1996.6,1746.6 2237.9,1746.6 2237.9,1643.1 1996.6,1643.1 1893.1,1643.1 1893.1,1746.6 1893.1,1763.8 1893.1,1867.2 1893.1,1884.5 1893.1,1987.9 1996.6,1987.9 '/%3E%3Cpolygon class='st0' points='806.9,1987.9 806.9,1798.3 962.1,1643.1 815.8,1643.1 755.2,1703.7 694.6,1643.1 548.3,1643.1 703.4,1798.3 703.4,1987.9 '/%3E%3Cpolygon class='st0' points='2953.7,1643.1 2893.1,1703.7 2832.5,1643.1 2686.2,1643.1 2841.4,1798.3 2841.4,1987.9 2944.8,1987.9 2944.8,1798.3 3100,1643.1 '/%3E%3Cpath class='st0' d='M548.3,1263.8H600v137.9c0,85.7,69.5,155.2,155.2,155.2s155.2-69.5,155.2-155.2v-137.9h51.7v-51.7h-51.7H600 h-51.7V1263.8z M833,1324.1c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 C815.8,1331.9,823.5,1324.1,833,1324.1z M833,1375.9c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 S823.5,1375.9,833,1375.9z M833,1427.6c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 C815.8,1435.3,823.5,1427.6,833,1427.6z M781.2,1324.1c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 C764,1331.9,771.7,1324.1,781.2,1324.1z M781.2,1375.9c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 S771.7,1375.9,781.2,1375.9z M781.2,1427.6c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 C764,1435.3,771.7,1427.6,781.2,1427.6z M781.2,1479.3c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 S771.7,1479.3,781.2,1479.3z M729.4,1324.1c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 C712.2,1331.9,719.9,1324.1,729.4,1324.1z M729.4,1375.9c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 S719.9,1375.9,729.4,1375.9z M729.4,1427.6c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 C712.2,1435.3,719.9,1427.6,729.4,1427.6z M729.4,1479.3c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 S719.9,1479.3,729.4,1479.3z M677.6,1324.1c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 C660.4,1331.9,668.1,1324.1,677.6,1324.1z M677.6,1375.9c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 C660.4,1383.6,668.1,1375.9,677.6,1375.9z M677.6,1427.6c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2 C660.4,1435.3,668.1,1427.6,677.6,1427.6z'/%3E%3Cpolygon class='st0' points='2051.7,2147.8 1999.3,2056.9 1927.6,2056.9 2047.2,2263.8 2056.3,2263.8 2175.9,2056.9 2104.2,2056.9 '/%3E%3Cpolygon class='st0' points='1641.4,2056.9 1548.3,2056.9 1548.3,2119 1641.4,2119 1641.4,2263.8 1703.4,2263.8 1703.4,2119 1796.6,2119 1796.6,2056.9 1703.4,2056.9 '/%3E%3Cpolygon class='st0' points='1065.5,2056.9 1065.5,2119 1065.5,2129.3 1065.5,2191.4 1065.5,2201.7 1065.5,2263.8 1127.6,2263.8 1272.4,2263.8 1272.4,2201.7 1127.6,2201.7 1127.6,2191.4 1272.4,2191.4 1272.4,2129.3 1127.6,2129.3 1127.6,2119 1272.4,2119 1272.4,2056.9 1127.6,2056.9 '/%3E%3Cpolygon class='st0' points='2210.3,2056.9 2210.3,2119 2210.3,2129.3 2210.3,2191.4 2210.3,2201.7 2210.3,2263.8 2272.4,2263.8 2417.2,2263.8 2417.2,2201.7 2272.4,2201.7 2272.4,2191.4 2417.2,2191.4 2417.2,2129.3 2272.4,2129.3 2272.4,2119 2417.2,2119 2417.2,2056.9 2272.4,2056.9 '/%3E%3Cpolygon class='st0' points='686.2,2056.9 624.1,2056.9 624.1,2201.7 624.1,2263.8 686.2,2263.8 810.3,2263.8 810.3,2201.7 686.2,2201.7 '/%3E%3Cpolygon class='st0' points='906.9,2056.9 844.8,2056.9 844.8,2201.7 844.8,2263.8 906.9,2263.8 1031,2263.8 1031,2201.7 906.9,2201.7 '/%3E%3Crect x='1831' y='2056.9' class='st0' width='62.1' height='206.9'/%3E%3Cpath class='st0' d='M100,2160.3c0,57.1,46.3,103.4,103.4,103.4h103.4v-62.1H203.4c-22.9,0-41.4-18.5-41.4-41.4 s18.5-41.4,41.4-41.4h103.4v-62.1H203.4C146.3,2056.9,100,2103.2,100,2160.3z'/%3E%3Cpath class='st0' d='M1306.9,2160.3c0,57.1,46.3,103.4,103.4,103.4h103.4v-62.1h-103.4c-22.9,0-41.4-18.5-41.4-41.4 s18.5-41.4,41.4-41.4h103.4v-62.1h-103.4C1353.2,2056.9,1306.9,2103.2,1306.9,2160.3z'/%3E%3Cpolygon class='st0' points='193.1,1143.1 255.2,1143.1 255.2,998.3 348.3,998.3 348.3,936.2 255.2,936.2 193.1,936.2 100,936.2 100,998.3 193.1,998.3 '/%3E%3Cpolygon class='st0' points='444.8,1070.7 527.6,1070.7 527.6,1143.1 589.7,1143.1 589.7,1070.7 589.7,1008.6 589.7,936.2 527.6,936.2 527.6,1008.6 444.8,1008.6 444.8,936.2 382.8,936.2 382.8,1008.6 382.8,1070.7 382.8,1143.1 444.8,1143.1 '/%3E%3Cpolygon class='st0' points='831,1143.1 831,1081 686.2,1081 686.2,1070.7 831,1070.7 831,1008.6 686.2,1008.6 686.2,998.3 831,998.3 831,936.2 686.2,936.2 624.1,936.2 624.1,998.3 624.1,1008.6 624.1,1070.7 624.1,1081 624.1,1143.1 686.2,1143.1 '/%3E%3Cpath class='st0' d='M1100,1436.2h43.4l120.7,120.7h146.3l-120.7-120.7h8.6c61.9,0,112.1-50.2,112.1-112.1s-50.2-112.1-112.1-112.1 H1100H996.6v120.7v60.3v43.1v120.7H1100V1436.2z M1169,1298.3c0,19,15.5,34.5,34.5,34.5s34.5-15.5,34.5-34.5h34.5 c0,38-30.9,69-69,69s-69-30.9-69-69H1169z'/%3E%3Cpath class='st0' d='M1533.1,1374.1c-5.5-31,13-58.1,91.3-75c39.9-8.6,70.8-7.8,90,1.4c29.4-26.6,48-49.4,58.9-64.7 c-22.3-13.1-47.7-21.3-74.9-23.2v-0.5h-12.2h-241.4v103.4v137.7c38.2-13.8,72.4-28.3,102.9-43.2 C1539.7,1395.8,1534.6,1382.5,1533.1,1374.1z'/%3E%3Cpath class='st0' d='M1698.4,1556.9v-0.5c89.5-6.3,160.2-80.8,160.2-171.9c0-57.1-27.8-107.8-70.6-139.1 c-11.1,16-29.8,39.2-59.2,66.2c2.6,3.3,4.7,6.9,6,11c10.3,32.5-19.7,144.1-86.5,152.8c-39.4,5.2-71-21.9-91.2-50.6 c-33.1,16.1-70.4,31.9-112.3,46.7v85.4h241.4H1698.4z'/%3E%3Cpath class='st0' d='M2375.9,1436.2l36.6-36.6l12.2,12.2l12.2,12.2l-14.9,14.9l118,118h146.3l-120.7-120.7h8.6 c61.9,0,112.1-50.2,112.1-112.1s-50.2-112.1-112.1-112.1h-198.3h-103.4v120.7v60.3v43.1v120.7h103.4L2375.9,1436.2L2375.9,1436.2z M2476.4,1299c16.8-16.8,44.1-16.8,61,0c16.8,16.8,16.8,44.1,0,61c-6.9,6.9-15.5,10.9-24.4,12.1l-48.7-48.7 C2465.5,1314.5,2469.5,1305.9,2476.4,1299z M2412.4,1375.2l36.6-36.6c3.4-3.4,8.8-3.4,12.2,0l36.6,36.6c3.4,3.4,3.4,8.8,0,12.2 l-36.6,36.6c-3.4,3.4-8.8,3.4-12.2,0l-36.6-36.6C2409.1,1384.1,2409.1,1378.6,2412.4,1375.2z'/%3E%3Cpath class='st0' d='M2686.2,1755.2c0-61.9-50.2-112.1-112.1-112.1h-198.3h-103.4v99.3h155.9c4.1-24.5,25.3-43.1,50.9-43.1h103.4 v17.2h-90.5c-7.1,0-12.9,5.8-12.9,12.9s5.8,12.9,12.9,12.9h90.5v17.2h-90.5c-7.1,0-12.9,5.8-12.9,12.9s5.8,12.9,12.9,12.9h90.5 v17.2h-103.4c-25.6,0-46.8-18.6-50.9-43.1h-155.9v4.2v60.3v43.1v120.7h103.4V1867h43.4l120.7,120.7h146.3L2565.5,1867h8.6 C2636,1867.2,2686.2,1817.1,2686.2,1755.2z'/%3E%3Cpath class='st0' d='M1410.3,1873.7c-1.2-60.9-50.9-109.9-112-109.9h-181c-4.8,0-8.6-3.9-8.6-8.6c0-4.8,3.9-8.6,8.6-8.6h293.1 v-103.4h-299.5c-62.8,0-115.5,51.4-114.3,114.3c1.2,60.9,50.9,109.9,112,109.9h181c4.8,0,8.6,3.9,8.6,8.6v8.6l-34.5,103.4h32.3 C1358.9,1987.9,1411.5,1936.5,1410.3,1873.7z'/%3E%3Cpolygon class='st0' points='1263.8,1884.5 1229.3,1884.5 1194.8,1987.9 1229.3,1987.9 '/%3E%3Cpolygon class='st0' points='1125.9,1884.5 1091.4,1884.5 1056.9,1987.9 1091.4,1987.9 '/%3E%3Cpolygon class='st0' points='919,1884.5 850,1884.5 850,1987.9 884.5,1987.9 '/%3E%3Cpolygon class='st0' points='1125.9,1987.9 1160.3,1987.9 1194.8,1884.5 1160.3,1884.5 '/%3E%3Cpolygon class='st0' points='1022.4,1987.9 1056.9,1884.5 1022.4,1884.5 987.9,1987.9 '/%3E%3Cpolygon class='st0' points='919,1987.9 953.4,1987.9 987.9,1884.5 953.4,1884.5 '/%3E%3Cpath class='st0' d='M486.2,2056.9h-41.4c-57.1,0-103.4,46.3-103.4,103.4c0,57.1,46.3,103.4,103.4,103.4h41.4 c57.1,0,103.4-46.3,103.4-103.4C589.7,2103.2,543.3,2056.9,486.2,2056.9z M478.3,2161.3l4.6,46.5h-34.5l4.6-46.3 c-8-4.4-13.4-12.9-13.4-22.7c0-14.3,11.6-25.9,25.9-25.9s25.9,11.6,25.9,25.9C491.4,2148.4,486.1,2156.8,478.3,2161.3z'/%3E%3C/g%3E%3Cg%3E%3Cg%3E%3Cg%3E%3Cdefs%3E%3Cpath id='SVGID_1_' d='M203.4,1358.4l30.3,30.3l73.2,73.1l73.1-73.1l30.3-30.3v198.5h103.5v-344.8H410.3l-103.4,103.4 l-103.5-103.4H100v344.8h103.4V1358.4z M410.3,1789.4v198.5h103.5v-344.8H410.3l-103.4,103.5l-103.5-103.5H100v344.8h103.4 v-198.5l30.3,30.3l73.2,73.1l73.1-73.1L410.3,1789.4z M1600,1987.9h103.4v-241.3h155.2v-103.5h-155.2H1600h-155.2v103.5H1600 V1987.9z M2237.9,1556.9v-103.5h-241.3v-17.2h241.3v-103.4h-241.3v-17.3h241.3v-103.4h-241.3h-103.5v103.4v17.3v103.4v17.2 v103.5h103.5H2237.9z M2237.9,1987.9v-103.4h-241.3v-17.3h241.3v-103.4h-241.3v-17.2h241.3v-103.5h-241.3h-103.5v103.5v17.2 v103.4v17.3v103.4h103.5H2237.9z M806.9,1987.9v-189.6l155.2-155.2H815.8l-60.6,60.6l-60.6-60.6H548.3l155.1,155.2v189.6H806.9z M2953.7,1643.1l-60.6,60.6l-60.6-60.6h-146.3l155.2,155.2v189.6h103.4v-189.6l155.2-155.2H2953.7z M548.3,1263.8H600v137.9 c0,85.7,69.5,155.2,155.2,155.2s155.2-69.5,155.2-155.2v-137.9h51.7v-51.7h-51.7H600h-51.7V1263.8z M833,1324.1 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2C815.8,1331.9,823.5,1324.1,833,1324.1z M833,1375.9 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2S823.5,1375.9,833,1375.9z M833,1427.6 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2C815.8,1435.3,823.5,1427.6,833,1427.6z M781.2,1324.1 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2C764,1331.9,771.7,1324.1,781.2,1324.1z M781.2,1375.9 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2S771.7,1375.9,781.2,1375.9z M781.2,1427.6 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2C764,1435.3,771.7,1427.6,781.2,1427.6z M781.2,1479.3 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2S771.7,1479.3,781.2,1479.3z M729.4,1324.1 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2C712.2,1331.9,719.9,1324.1,729.4,1324.1z M729.4,1375.9 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2S719.9,1375.9,729.4,1375.9z M729.4,1427.6 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2C712.2,1435.3,719.9,1427.6,729.4,1427.6z M729.4,1479.3 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2S719.9,1479.3,729.4,1479.3z M677.6,1324.1 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2C660.4,1331.9,668.1,1324.1,677.6,1324.1z M677.6,1375.9 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2C660.4,1383.6,668.1,1375.9,677.6,1375.9z M677.6,1427.6 c9.5,0,17.2,7.7,17.2,17.2s-7.7,17.2-17.2,17.2s-17.2-7.7-17.2-17.2C660.4,1435.3,668.1,1427.6,677.6,1427.6z M2051.7,2147.8 l-52.4-90.9h-71.7l119.6,206.9h9.1l119.6-206.9h-71.7L2051.7,2147.8z M1641.4,2056.9h-93.1v62.1h93.1v144.8h62V2119h93.2v-62.1 h-93.2H1641.4z M1065.5,2056.9v62.1v10.3v62.1v10.3v62.1h62.1h144.8v-62.1h-144.8v-10.3h144.8v-62.1h-144.8V2119h144.8v-62.1 h-144.8H1065.5z M2210.3,2056.9v62.1v10.3v62.1v10.3v62.1h62.1h144.8v-62.1h-144.8v-10.3h144.8v-62.1h-144.8V2119h144.8v-62.1 h-144.8H2210.3z M686.2,2056.9h-62.1v144.8v62.1h62.1h124.1v-62.1H686.2V2056.9z M906.9,2056.9h-62.1v144.8v62.1h62.1H1031 v-62.1H906.9V2056.9z M1831,2056.9h62.1v206.9H1831V2056.9z M100,2160.3c0,57.1,46.3,103.4,103.4,103.4h103.4v-62.1H203.4 c-22.9,0-41.4-18.5-41.4-41.4s18.5-41.4,41.4-41.4h103.4v-62.1H203.4C146.3,2056.9,100,2103.2,100,2160.3z M1306.9,2160.3 c0,57.1,46.3,103.4,103.4,103.4h103.4v-62.1h-103.4c-22.9,0-41.4-18.5-41.4-41.4s18.5-41.4,41.4-41.4h103.4v-62.1h-103.4 C1353.2,2056.9,1306.9,2103.2,1306.9,2160.3z M193.1,1143.1h62.1V998.3h93.1v-62.1h-93.1h-62.1H100v62.1h93.1V1143.1z M444.8,1070.7h82.8v72.4h62.1v-72.4v-62.1v-72.4h-62.1v72.4h-82.8v-72.4h-62v72.4v62.1v72.4h62V1070.7z M831,1143.1V1081H686.2 v-10.3H831v-62.1H686.2v-10.3H831v-62.1H686.2h-62.1v62.1v10.3v62.1v10.3v62.1h62.1H831z M1100,1436.2h43.4l120.7,120.7h146.3 l-120.7-120.7h8.6c61.9,0,112.1-50.2,112.1-112.1s-50.2-112.1-112.1-112.1H1100H996.6v120.7v60.3v43.1v120.7H1100V1436.2z M1169,1298.3c0,19,15.5,34.5,34.5,34.5s34.5-15.5,34.5-34.5h34.5c0,38-30.9,69-69,69s-69-30.9-69-69H1169z M1533.1,1374.1 c-5.5-31,13-58.1,91.3-75c39.9-8.6,70.8-7.8,90,1.4c29.4-26.6,48-49.4,58.9-64.7c-22.3-13.1-47.7-21.3-74.9-23.2v-0.5h-12.2 h-241.4v103.4v137.7c38.2-13.8,72.4-28.3,102.9-43.2C1539.7,1395.8,1534.6,1382.5,1533.1,1374.1z M1698.4,1556.9v-0.5 c89.5-6.3,160.2-80.8,160.2-171.9c0-57.1-27.8-107.8-70.6-139.1c-11.1,16-29.8,39.2-59.2,66.2c2.6,3.3,4.7,6.9,6,11 c10.3,32.5-19.7,144.1-86.5,152.8c-39.4,5.2-71-21.9-91.2-50.6c-33.1,16.1-70.4,31.9-112.3,46.7v85.4h241.4H1698.4z M2375.9,1436.2l36.6-36.6l12.2,12.2l12.2,12.2l-14.9,14.9l118,118h146.3l-120.7-120.7h8.6c61.9,0,112.1-50.2,112.1-112.1 s-50.2-112.1-112.1-112.1h-198.3h-103.4v120.7v60.3v43.1v120.7h103.4L2375.9,1436.2L2375.9,1436.2z M2476.4,1299 c16.8-16.8,44.1-16.8,61,0c16.8,16.8,16.8,44.1,0,61c-6.9,6.9-15.5,10.9-24.4,12.1l-48.7-48.7 C2465.5,1314.5,2469.5,1305.9,2476.4,1299z M2412.4,1375.2l36.6-36.6c3.4-3.4,8.8-3.4,12.2,0l36.6,36.6c3.4,3.4,3.4,8.8,0,12.2 l-36.6,36.6c-3.4,3.4-8.8,3.4-12.2,0l-36.6-36.6C2409.1,1384.1,2409.1,1378.6,2412.4,1375.2z M2686.2,1755.2 c0-61.9-50.2-112.1-112.1-112.1h-198.3h-103.4v99.3h155.9c4.1-24.5,25.3-43.1,50.9-43.1h103.4v17.2h-90.5 c-7.1,0-12.9,5.8-12.9,12.9s5.8,12.9,12.9,12.9h90.5v17.2h-90.5c-7.1,0-12.9,5.8-12.9,12.9s5.8,12.9,12.9,12.9h90.5v17.2h-103.4 c-25.6,0-46.8-18.6-50.9-43.1h-155.9v4.2v60.3v43.1v120.7h103.4V1867h43.4l120.7,120.7h146.3L2565.5,1867h8.6 C2636,1867.2,2686.2,1817.1,2686.2,1755.2z M1410.3,1873.7c-1.2-60.9-50.9-109.9-112-109.9h-181c-4.8,0-8.6-3.9-8.6-8.6 c0-4.8,3.9-8.6,8.6-8.6h293.1v-103.4h-299.5c-62.8,0-115.5,51.4-114.3,114.3c1.2,60.9,50.9,109.9,112,109.9h181 c4.8,0,8.6,3.9,8.6,8.6v8.6l-34.5,103.4h32.3C1358.9,1987.9,1411.5,1936.5,1410.3,1873.7z M1263.8,1884.5h-34.5l-34.5,103.4 h34.5L1263.8,1884.5z M1125.9,1884.5h-34.5l-34.5,103.4h34.5L1125.9,1884.5z M919,1884.5h-69v103.4h34.5L919,1884.5z M1125.9,1987.9h34.4l34.5-103.4h-34.5L1125.9,1987.9z M1022.4,1987.9l34.5-103.4h-34.5l-34.5,103.4H1022.4z M919,1987.9h34.4 l34.5-103.4h-34.5L919,1987.9z M486.2,2056.9h-41.4c-57.1,0-103.4,46.3-103.4,103.4c0,57.1,46.3,103.4,103.4,103.4h41.4 c57.1,0,103.4-46.3,103.4-103.4C589.7,2103.2,543.3,2056.9,486.2,2056.9z M478.3,2161.3l4.6,46.5h-34.5l4.6-46.3 c-8-4.4-13.4-12.9-13.4-22.7c0-14.3,11.6-25.9,25.9-25.9s25.9,11.6,25.9,25.9C491.4,2148.4,486.1,2156.8,478.3,2161.3z'/%3E%3C/defs%3E%3CclipPath id='SVGID_00000155866506279701966360000012343814541648881288_'%3E%3Cuse xlink:href='%23SVGID_1_' style='overflow:visible;'/%3E%3C/clipPath%3E%3Cimage style='overflow:visible;clip-path:url(%23SVGID_00000155866506279701966360000012343814541648881288_);enable-background:new ;' width='3200' height='3200' xlink:href='_elements/gradient.png'%3E%3C/image%3E%3C/g%3E%3C/g%3E%3C/g%3E%3Cg%3E%3Cg%3E%3Cpath class='st1' d='M508.8,1217.1v334.8h-93.4v-193.5v-12.1l-8.5,8.5l-30.3,30.3l-69.6,69.6l-69.6-69.6l-30.3-30.3l-8.5-8.5v12.1 v193.5H105v-334.8h96.4l102,102l3.5,3.5l3.5-3.5l102-102L508.8,1217.1 M513.8,1212.1H410.3l-103.4,103.4l-103.4-103.4H100v344.8 h103.4v-198.5l30.3,30.3l73.1,73.1l73.1-73.1l30.3-30.3v198.5h103.4v-344.8L513.8,1212.1L513.8,1212.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M508.8,1648.1v334.8h-93.4v-193.5v-12.1l-8.5,8.5l-30.3,30.3l-69.6,69.6l-69.6-69.6l-30.3-30.3l-8.5-8.5v12.1 v193.5H105v-334.8h96.4l102,102l3.5,3.5l3.5-3.5l102-102L508.8,1648.1 M513.8,1643.1H410.3l-103.4,103.4l-103.4-103.4H100v344.8 h103.4v-198.5l30.3,30.3l73.1,73.1l73.1-73.1l30.3-30.3v198.5h103.4v-344.8L513.8,1643.1L513.8,1643.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1853.6,1648.1v93.4h-150.2h-5v5v236.4H1605v-236.4v-5h-5h-150.2v-93.4H1600h103.4H1853.6 M1858.6,1643.1 h-155.2H1600h-155.2v103.4H1600v241.4h103.4v-241.4h155.2V1643.1L1858.6,1643.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M2232.9,1217.1v93.4h-236.4h-5v5v17.2v5h5h236.4v93.4h-236.4h-5v5v17.2v5h5h236.4v93.4h-236.4h-98.4v-98.4 v-17.2v-103.4v-17.2v-98.4h98.4H2232.9 M2237.9,1212.1h-241.4h-103.4v103.4v17.2v103.4v17.2v103.4h103.4h241.4v-103.4h-241.4 v-17.2h241.4v-103.4h-241.4v-17.2h241.4V1212.1L2237.9,1212.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M2232.9,1648.1v93.4h-236.4h-5v5v17.2v5h5h236.4v93.4h-236.4h-5v5v17.2v5h5h236.4v93.4h-236.4h-98.4v-98.4 v-17.2v-103.4v-17.2v-98.4h98.4H2232.9 M2237.9,1643.1h-241.4h-103.4v103.4v17.2v103.4v17.2v103.4h103.4h241.4v-103.4h-241.4 v-17.2h241.4v-103.4h-241.4v-17.2h241.4V1643.1L2237.9,1643.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M950,1648.1l-146.6,146.6l-1.5,1.5v2.1V1983h-93.4v-184.7v-2.1l-1.5-1.5l-146.6-146.6h132.2l59.1,59.1 l3.5,3.5l3.5-3.5l59.1-59.1L950,1648.1 M962.1,1643.1H815.8l-60.6,60.6l-60.6-60.6H548.3l155.2,155.2V1988h103.4v-189.7 L962.1,1643.1L962.1,1643.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M3087.9,1648.1l-146.6,146.6l-1.5,1.5v2.1V1983h-93.4v-184.7v-2.1l-1.5-1.5l-146.6-146.6h132.2l59.1,59.1 l3.5,3.5l3.5-3.5l59.1-59.1L3087.9,1648.1 M3100,1643.1h-146.3l-60.6,60.6l-60.6-60.6h-146.3l155.2,155.2V1988h103.4v-189.7 L3100,1643.1L3100,1643.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M957.1,1217.1v41.7h-46.7h-5v5v137.9c0,40.1-15.6,77.8-44,106.2s-66.1,44-106.2,44s-77.8-15.6-106.2-44 s-44-66.1-44-106.2v-137.9v-5h-5h-46.7v-41.7H600h310.3H957.1 M833,1363.6c12.3,0,22.2-10,22.2-22.2c0-12.3-10-22.2-22.2-22.2 c-12.3,0-22.2,10-22.2,22.2S820.7,1363.6,833,1363.6 M781.2,1363.6c12.3,0,22.2-10,22.2-22.2c0-12.3-10-22.2-22.2-22.2 s-22.2,10-22.2,22.2S769,1363.6,781.2,1363.6 M729.4,1363.6c12.3,0,22.2-10,22.2-22.2c0-12.3-10-22.2-22.2-22.2 c-12.3,0-22.2,10-22.2,22.2S717.2,1363.6,729.4,1363.6 M677.6,1363.6c12.3,0,22.2-10,22.2-22.2c0-12.3-10-22.2-22.2-22.2 c-12.3,0-22.2,10-22.2,22.2C655.4,1353.6,665.4,1363.6,677.6,1363.6 M833,1415.3c12.3,0,22.2-10,22.2-22.2 c0-12.3-10-22.2-22.2-22.2c-12.3,0-22.2,10-22.2,22.2C810.8,1405.4,820.7,1415.3,833,1415.3 M781.2,1415.3 c12.3,0,22.2-10,22.2-22.2c0-12.3-10-22.2-22.2-22.2s-22.2,10-22.2,22.2C759,1405.4,769,1415.3,781.2,1415.3 M729.4,1415.3 c12.3,0,22.2-10,22.2-22.2c0-12.3-10-22.2-22.2-22.2c-12.3,0-22.2,10-22.2,22.2C707.2,1405.4,717.2,1415.3,729.4,1415.3 M677.6,1415.3c12.3,0,22.2-10,22.2-22.2c0-12.3-10-22.2-22.2-22.2c-12.3,0-22.2,10-22.2,22.2 C655.4,1405.4,665.4,1415.3,677.6,1415.3 M833,1467.1c12.3,0,22.2-10,22.2-22.2s-10-22.2-22.2-22.2c-12.3,0-22.2,10-22.2,22.2 S820.7,1467.1,833,1467.1 M781.2,1467.1c12.3,0,22.2-10,22.2-22.2s-10-22.2-22.2-22.2s-22.2,10-22.2,22.2S769,1467.1,781.2,1467.1 M729.4,1467.1c12.3,0,22.2-10,22.2-22.2s-10-22.2-22.2-22.2c-12.3,0-22.2,10-22.2,22.2S717.2,1467.1,729.4,1467.1 M677.6,1467.1 c12.3,0,22.2-10,22.2-22.2s-10-22.2-22.2-22.2c-12.3,0-22.2,10-22.2,22.2S665.4,1467.1,677.6,1467.1 M781.2,1518.8 c12.3,0,22.2-10,22.2-22.2c0-12.3-10-22.2-22.2-22.2s-22.2,10-22.2,22.2S769,1518.8,781.2,1518.8 M729.4,1518.8 c12.3,0,22.2-10,22.2-22.2c0-12.3-10-22.2-22.2-22.2c-12.3,0-22.2,10-22.2,22.2S717.2,1518.8,729.4,1518.8 M962.1,1212.1h-51.7 H600h-51.7v51.7H600v137.9c0,85.7,69.5,155.2,155.2,155.2s155.2-69.5,155.2-155.2v-137.9h51.7L962.1,1212.1L962.1,1212.1z M833,1358.6c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2C850.3,1350.9,842.5,1358.6,833,1358.6L833,1358.6z M781.2,1358.6c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2C798.5,1350.9,790.7,1358.6,781.2,1358.6 L781.2,1358.6z M729.4,1358.6c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2 C746.7,1350.9,739,1358.6,729.4,1358.6L729.4,1358.6z M677.6,1358.6c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2 s17.2,7.7,17.2,17.2C694.9,1350.9,687.2,1358.6,677.6,1358.6L677.6,1358.6z M833,1410.3c-9.5,0-17.2-7.7-17.2-17.2 s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2C850.3,1402.6,842.5,1410.3,833,1410.3L833,1410.3z M781.2,1410.3 c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2C798.5,1402.6,790.7,1410.3,781.2,1410.3L781.2,1410.3z M729.4,1410.3c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2C746.7,1402.6,739,1410.3,729.4,1410.3 L729.4,1410.3z M677.6,1410.3c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2 C694.9,1402.6,687.2,1410.3,677.6,1410.3L677.6,1410.3z M833,1462.1c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2 s17.2,7.7,17.2,17.2C850.3,1454.3,842.5,1462.1,833,1462.1L833,1462.1z M781.2,1462.1c-9.5,0-17.2-7.7-17.2-17.2 s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2C798.5,1454.3,790.7,1462.1,781.2,1462.1L781.2,1462.1z M729.4,1462.1 c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2C746.7,1454.3,739,1462.1,729.4,1462.1L729.4,1462.1z M677.6,1462.1c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2C694.9,1454.3,687.2,1462.1,677.6,1462.1 L677.6,1462.1z M781.2,1513.8c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2s17.2,7.7,17.2,17.2 C798.5,1506.1,790.7,1513.8,781.2,1513.8L781.2,1513.8z M729.4,1513.8c-9.5,0-17.2-7.7-17.2-17.2s7.7-17.2,17.2-17.2 s17.2,7.7,17.2,17.2C746.7,1506.1,739,1513.8,729.4,1513.8L729.4,1513.8z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M2167.2,2061.9l-113.8,196.9h-3.3l-113.8-196.9h60.1l51,88.4l4.3,7.5l4.3-7.5l51-88.4H2167.2 M2175.9,2056.9 h-71.7l-52.5,90.9l-52.5-90.9h-71.7l119.6,206.9h9.1L2175.9,2056.9L2175.9,2056.9z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1791.6,2061.9v52.1h-88.1h-5v5v139.8h-52.1V2119v-5h-5h-88.1v-52.1h88.1h62.1H1791.6 M1796.6,2056.9h-93.1 h-62.1h-93.1v62.1h93.1v144.8h62.1V2119h93.1V2056.9L1796.6,2056.9z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1267.4,2061.9v52.1h-139.8h-5v5v10.3v5h5h139.8v52.1h-139.8h-5v5v10.3v5h5h139.8v52.1h-139.8h-57.1v-57.1 v-10.3v-62.1V2119v-57.1h57.1H1267.4 M1272.4,2056.9h-144.8h-62.1v62.1v10.3v62.1v10.3v62.1h62.1h144.8v-62.1h-144.8v-10.3h144.8 v-62.1h-144.8V2119h144.8V2056.9L1272.4,2056.9z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M2412.2,2061.9v52.1h-139.8h-5v5v10.3v5h5h139.8v52.1h-139.8h-5v5v10.3v5h5h139.8v52.1h-139.8h-57.1v-57.1 v-10.3v-62.1V2119v-57.1h57.1H2412.2 M2417.2,2056.9h-144.8h-62.1v62.1v10.3v62.1v10.3v62.1h62.1h144.8v-62.1h-144.8v-10.3h144.8 v-62.1h-144.8V2119h144.8V2056.9L2417.2,2056.9z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M681.2,2061.9v139.8v5h5h119.1v52.1H686.2h-57.1v-57.1v-139.8H681.2 M686.2,2056.9h-62.1v144.8v62.1h62.1 h124.1v-62.1H686.2V2056.9L686.2,2056.9z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M901.9,2061.9v139.8v5h5H1026v52.1H906.9h-57.1v-57.1v-139.8H901.9 M906.9,2056.9h-62.1v144.8v62.1h62.1H1031 v-62.1H906.9V2056.9L906.9,2056.9z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1888.1,2061.9v196.9H1836v-196.9H1888.1 M1893.1,2056.9H1831v206.9h62.1V2056.9L1893.1,2056.9z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M301.9,2061.9v52.1h-98.4c-25.6,0-46.4,20.8-46.4,46.4c0,25.6,20.8,46.4,46.4,46.4h98.4v52.1h-98.4 c-54.3,0-98.4-44.2-98.4-98.4s44.2-98.4,98.4-98.4h98.4 M306.9,2056.9H203.4c-57.1,0-103.4,46.3-103.4,103.4 c0,57.1,46.3,103.4,103.4,103.4h103.4v-62.1H203.4c-22.9,0-41.4-18.5-41.4-41.4s18.5-41.4,41.4-41.4h103.4v-61.9H306.9z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1508.8,2061.9v52.1h-98.4c-25.6,0-46.4,20.8-46.4,46.4c0,25.6,20.8,46.4,46.4,46.4h98.4v52.1h-98.4 c-54.3,0-98.4-44.2-98.4-98.4s44.2-98.4,98.4-98.4h98.4 M1513.8,2056.9h-103.4c-57.1,0-103.4,46.3-103.4,103.4 c0,57.1,46.3,103.4,103.4,103.4h103.4v-62.1h-103.4c-22.9,0-41.4-18.5-41.4-41.4s18.5-41.4,41.4-41.4h103.4V2056.9L1513.8,2056.9z '/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M343.3,941.2v52.1h-88.1h-5v5v139.8h-52.1V998.3v-5h-5H105v-52.1h88.1h62.1H343.3 M348.3,936.2h-93.1h-62.1 H100v62.1h93.1v144.8h62.1V998.3h93.1L348.3,936.2L348.3,936.2z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M584.7,941.2v67.4v62.1v67.4h-52.1v-67.4v-5h-5h-82.8h-5v5v67.4h-52.1v-67.4v-62.1v-67.4h52.1v67.4v5h5h82.8 h5v-5v-67.4L584.7,941.2 M589.7,936.2h-62.1v72.4h-82.8v-72.4h-62.1v72.4v62.1v72.4h62.1v-72.4h82.8v72.4h62.1v-72.4v-62.1V936.2 L589.7,936.2z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M826,941.2v52.1H686.2h-5v5v10.3v5h5H826v52.1H686.2h-5v5v10.3v5h5H826v52.1H686.2h-57.1V1081v-10.3v-62.1 v-10.3v-57.1h57.1H826 M831,936.2H686.2h-62.1v62.1v10.3v62.1v10.3v62.1h62.1H831V1081H686.2v-10.3H831v-62.1H686.2v-10.3H831 V936.2L831,936.2z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1298.3,1217.1c28.6,0,55.5,11.1,75.7,31.4c20.2,20.2,31.4,47.1,31.4,75.7s-11.1,55.5-31.4,75.7 c-20.2,20.2-47.1,31.4-75.7,31.4h-8.6h-12.1l8.5,8.5l112.2,112.2h-132.2l-119.2-119.2l-1.5-1.5h-2.1H1100h-5v5V1552h-93.4v-115.7 v-43.1v-60.3v-115.7h98.4L1298.3,1217.1 M1203.4,1327.8c-16.3,0-29.5-13.2-29.5-29.5v-5h-5h-34.5h-5v5c0,40.8,33.2,74,74,74 s74-33.2,74-74v-5h-5h-34.5h-5v5C1232.9,1314.5,1219.7,1327.8,1203.4,1327.8 M1298.3,1212.1H1100H996.6v120.7v60.3v43.1v120.7 H1100v-120.7h43.4l120.7,120.7h146.3l-120.7-120.7h8.6c61.9,0,112.1-50.2,112.1-112.1S1360.2,1212.1,1298.3,1212.1L1298.3,1212.1z M1272.4,1298.3c0,38-30.9,69-69,69s-69-30.9-69-69h34.5c0,19,15.5,34.5,34.5,34.5s34.5-15.5,34.5-34.5H1272.4L1272.4,1298.3z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1693.4,1217.1L1693.4,1217.1l4.7,0.4c24,1.7,46.8,8.3,67.9,19.8c-10.4,14-27.3,34.1-52.5,57.2 c-10.5-4.3-23.6-6.5-39.1-6.5c-15,0-32.2,2.1-51,6.1c-38.1,8.2-64,19.2-79.4,33.5c-14,13-19.1,28.5-15.8,47.3 c1.5,8.7,6.2,20.7,12.6,32.8c-28.5,13.7-59.1,26.6-91,38.3v-130.5v-98.4h236.4L1693.4,1217.1 M1698.4,1212.1h-12.2h-241.4v103.4 v137.7c38.2-13.8,72.4-28.3,102.9-43.2c-8.1-14.2-13.1-27.5-14.6-35.9c-5.5-31,13-58.1,91.3-75c18.7-4,35.5-6,50-6 c16.4,0,29.9,2.5,40.1,7.4c29.4-26.6,48-49.4,58.9-64.7c-22.3-13.1-47.7-21.3-74.9-23.2v-0.5L1698.4,1212.1L1698.4,1212.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1789.1,1252.5c19,14.8,34.8,33.8,45.8,55.1c12.4,23.9,18.7,49.8,18.7,76.9c0,42.6-16,83.3-45.2,114.4 c-29,31-68.2,49.6-110.4,52.6l-4.7,0.3v0.1h-7.2h-236.4V1475c37.3-13.4,72.9-28.1,105.7-43.9c14.9,20.1,43.6,49.9,83.1,49.9 c3.4,0,6.9-0.2,10.3-0.7c24.1-3.2,46-19.2,63.3-46.4c11.3-17.8,20.4-40,25.4-62.5c4.7-20.9,5.4-39.3,1.9-50.5 c-1-3.1-2.3-6-4.1-8.8C1761.3,1288.1,1778.5,1267.1,1789.1,1252.5 M1788,1245.4c-11.1,16-29.8,39.2-59.2,66.2 c2.6,3.3,4.7,6.9,6,11c10.3,32.5-19.7,144.1-86.5,152.8c-3.3,0.4-6.5,0.6-9.7,0.6c-34.9,0-63-24.9-81.5-51.2 c-33.1,16.1-70.4,31.9-112.3,46.7v85.4h241.4h12.2v-0.5c89.5-6.3,160.2-80.8,160.2-171.9C1858.6,1327.3,1830.8,1276.7,1788,1245.4 L1788,1245.4z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M2574.1,1217.1c28.6,0,55.5,11.1,75.7,31.4c20.2,20.2,31.4,47.1,31.4,75.7s-11.1,55.5-31.4,75.7 c-20.2,20.2-47.1,31.4-75.7,31.4h-8.6h-12.1l8.5,8.5l112.2,112.2H2542l-113-113l11.4-11.4l2.6-2.6l2.6,2.6c2.6,2.6,6,4,9.6,4 s7.1-1.4,9.6-4l36.6-36.6c2.6-2.6,4-6,4-9.6s-1.4-7.1-4-9.6l-36.6-36.6c-2.6-2.6-6-4-9.6-4s-7.1,1.4-9.6,4l-36.6,36.6 c-5.3,5.3-5.3,14,0,19.3l2.6,2.6l-2.6,2.6l-36.6,36.6l-1.5,1.5v2.1v115.7h-93.4v-115.7v-43.1v-60.3v-115.7h98.4h198.2 M2511.2,1377.4l2.5-0.3c10.4-1.5,19.9-6.2,27.3-13.6c9.1-9.1,14.1-21.2,14.1-34s-5-24.9-14.1-34s-21.2-14.1-34-14.1 s-24.9,5-34,14.1c-7.4,7.4-12.1,16.8-13.6,27.3l-0.3,2.5l1.8,1.8l48.7,48.7L2511.2,1377.4 M2574.1,1212.1h-198.3h-103.4v120.7 v60.3v43.1v120.7h103.4v-120.7l36.6-36.6l12.2,12.2l12.2,12.2l-14.9,14.9l118,118h146.3l-120.7-120.7h8.6 c61.9,0,112.1-50.2,112.1-112.1S2636,1212.1,2574.1,1212.1L2574.1,1212.1z M2512.9,1372.1l-48.7-48.7c1.3-8.9,5.3-17.6,12.1-24.4 c8.4-8.4,19.4-12.6,30.5-12.6c11,0,22.1,4.2,30.5,12.6c16.8,16.8,16.8,44.1,0,61C2530.5,1366.8,2521.9,1370.9,2512.9,1372.1 L2512.9,1372.1z M2455.1,1426.5c-2.2,0-4.4-0.8-6.1-2.5l-36.6-36.6c-3.4-3.4-3.4-8.8,0-12.2l36.6-36.6c1.7-1.7,3.9-2.5,6.1-2.5 s4.4,0.8,6.1,2.5l36.6,36.6c3.4,3.4,3.4,8.8,0,12.2l-36.6,36.6C2459.5,1425.7,2457.3,1426.5,2455.1,1426.5L2455.1,1426.5z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M2574.1,1648.1c28.6,0,55.5,11.1,75.7,31.4c20.2,20.2,31.4,47.1,31.4,75.7s-11.1,55.5-31.4,75.7 c-20.2,20.2-47.1,31.4-75.7,31.4h-8.6h-12.1l8.5,8.5l112.2,112.2H2542l-119.2-119.2l-1.5-1.5h-2.1h-43.4h-5v5V1983h-93.4v-115.7 v-43.1v-59.5h146.9c2.8,11.4,9.2,21.8,18.2,29.5c10.2,8.8,23.3,13.6,36.8,13.6h103.4h5v-5v-17.2v-5h-5h-90.5 c-4.4,0-7.9-3.6-7.9-7.9c0-4.4,3.6-7.9,7.9-7.9h90.5h5v-5v-17.2v-5h-5h-90.5c-4.4,0-7.9-3.6-7.9-7.9c0-4.4,3.6-7.9,7.9-7.9h90.5h5 v-5v-17.2v-5h-5h-103.4c-13.5,0-26.6,4.8-36.8,13.6c-9,7.7-15.4,18.1-18.2,29.5h-146.9v-89.3h98.4h198.3 M2574.1,1643.1h-198.3 h-103.4v99.3h155.9c4.1-24.5,25.3-43.1,50.9-43.1h103.4v17.2h-90.5c-7.1,0-12.9,5.8-12.9,12.9s5.8,12.9,12.9,12.9h90.5v17.2h-90.5 c-7.1,0-12.9,5.8-12.9,12.9s5.8,12.9,12.9,12.9h90.5v17.2h-103.4c-25.6,0-46.8-18.6-50.9-43.1h-155.9v4.2v60.3v43.1v120.7h103.4 V1867h43.4l120.7,120.7h146.3L2565.5,1867h8.6c61.9,0,112.1-50.2,112.1-112.1C2686.2,1693.3,2636,1643.1,2574.1,1643.1 L2574.1,1643.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1405.3,1648.1v93.4h-288.1c-7.5,0-13.6,6.1-13.6,13.6s6.1,13.6,13.6,13.6h181c28.2,0,54.9,10.9,75,30.7 c20.1,19.8,31.5,46.1,32,74.3c0.5,28.3-10.3,55.3-30.6,76c-10.2,10.4-22.1,18.5-35.4,24.2c-13.8,5.9-28.3,8.9-43.3,8.9h-25.3 l32.3-96.9l0.3-0.8v-0.8v-8.6c0-7.5-6.1-13.6-13.6-13.6h-181c-28.2,0-54.9-10.9-75-30.7c-20.1-19.8-31.5-46.1-32-74.3 c-0.5-28.3,10.3-55.3,30.6-76c10.2-10.4,22.1-18.5,35.4-24.2c13.8-5.9,28.3-8.9,43.3-8.9h294.4 M1410.3,1643.1h-299.5 c-62.8,0-115.5,51.4-114.3,114.3c1.2,60.9,50.9,109.9,112,109.9h181c4.8,0,8.6,3.9,8.6,8.6v8.6l-34.5,103.4h32.3 c62.8,0,115.5-51.4,114.3-114.3c-1.2-60.9-50.9-109.9-112-109.9h-181c-4.8,0-8.6-3.9-8.6-8.6c0-4.8,3.9-8.6,8.6-8.6h293.1V1643.1 L1410.3,1643.1z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1256.9,1889.5l-31.1,93.4h-23.9l31.1-93.4H1256.9 M1263.8,1884.5h-34.5l-34.5,103.4h34.5L1263.8,1884.5 L1263.8,1884.5z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1118.9,1889.5l-31.1,93.4h-23.9l31.1-93.4H1118.9 M1125.9,1884.5h-34.5l-34.5,103.4h34.5L1125.9,1884.5 L1125.9,1884.5z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M912,1889.5l-31.1,93.4H855v-93.4H912 M919,1884.5h-69v103.4h34.5L919,1884.5L919,1884.5z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1187.9,1889.5l-31.1,93.4h-23.9l31.1-93.4H1187.9 M1194.8,1884.5h-34.5l-34.5,103.4h34.5L1194.8,1884.5 L1194.8,1884.5z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M1050,1889.5l-31.1,93.4H995l31.1-93.4H1050 M1056.9,1884.5h-34.5l-34.5,103.4h34.5L1056.9,1884.5 L1056.9,1884.5z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M981,1889.5l-31.1,93.4H926l31.1-93.4H981 M987.9,1884.5h-34.5L919,1987.9h34.5L987.9,1884.5L987.9,1884.5z'/%3E%3C/g%3E%3Cg%3E%3Cpath class='st1' d='M486.2,2061.9c54.3,0,98.4,44.2,98.4,98.4s-44.2,98.4-98.4,98.4h-41.4c-54.3,0-98.4-44.2-98.4-98.4 s44.2-98.4,98.4-98.4H486.2 M447.8,2164.1l-4.3,43.2l-0.5,5.5h5.5H483h5.5l-0.5-5.5l-4.3-43.5c8-5.8,12.8-15.1,12.8-25 c0-17-13.8-30.9-30.9-30.9c-17,0-30.9,13.8-30.9,30.9C434.7,2148.9,439.6,2158.3,447.8,2164.1 M486.2,2056.9h-41.4 c-57.1,0-103.4,46.3-103.4,103.4c0,57.1,46.3,103.4,103.4,103.4h41.4c57.1,0,103.4-46.3,103.4-103.4 C589.7,2103.2,543.3,2056.9,486.2,2056.9L486.2,2056.9z M448.4,2207.8l4.6-46.3c-8-4.4-13.4-12.9-13.4-22.7 c0-14.3,11.6-25.9,25.9-25.9s25.9,11.6,25.9,25.9c0,9.6-5.3,18-13.1,22.5l4.6,46.5H448.4L448.4,2207.8z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E"
    },
    execution_data,
  );

  await deployNft(
    'detectives',
    {
      spec: "nft-1.0.0",
      name: "Murder Mystery Collective - Detectives",
      symbol: "",
      base_uri: "https://ffgateway.infura-ipfs.io/ipfs/QmcABQEkMb6sTQ8bzwh4XdtkqHLTUeTkwbwzHSbsUn7mxG",
    },
    execution_data,
  );

  await deployLockedToken(
    execution_data,
  );

  console.log('setup.js: Deploy and initialize game contract');

  await deployGame(
    execution_data,
  );

  await registerContracts(
    [
      execution_data.connAccountMap.gameAccount,
      execution_data.connAccountMap.ownerAccount,
      execution_data.connAccountMap.lockedTokenAccount,
    ],
    [
      execution_data.connAccountMap.usdtTokenAccount,
      execution_data.connAccountMap.nekoTokenAccount,
      execution_data.connAccountMap.auroraTokenAccount,
      execution_data.connAccountMap.lockedTokenAccount,
    ],
  );

  console.log('setup.js: Config minters');

  const minterContracts = [
    execution_data.connAccountMap.gameAccount,
    execution_data.connAccountMap.ownerAccount,
  ];

  const promisesMint = [];

  for (let minter of minterContracts) {
    promisesMint.push(
      execution_data.connAccountMap.ownerAccount.functionCall({
        contractId: execution_data.connAccountMap.lockedTokenAccount.accountId,
        methodName: "add_minter",
        args: {
          new_minter: minter.accountId,
        },
        attachedDeposit: new BN("1"),
      })
    );
  }

  await Promise.all(promisesMint);

  console.log('setup.js: Mint tokens on locked contract');

  await execution_data.connAccountMap.ownerAccount.functionCall({
    contractId: execution_data.connAccountMap.usdtTokenAccount.accountId,
    methodName: "ft_transfer_call",
    args: {
      receiver_id: execution_data.connAccountMap.lockedTokenAccount.accountId,
      amount: "500000000000000000000",
      msg: "",
      msg: JSON.stringify({
        type: 'Mint',
        account_id: execution_data.connAccountMap.gameAccount.accountId,
      })
    },
    attachedDeposit: new BN(1),
    gas: new BN(300000000000000),
  });

  console.log('setup.js: Insert token price on game contract');

  await execution_data.connAccountMap.ownerAccount.functionCall({
    contractId: execution_data.connAccountMap.gameAccount.accountId,
    methodName: "insert_token_price",
    args: {
      currency: execution_data.connAccountMap.usdtTokenAccount.accountId,
      price: '1000000',
    },
    attachedDeposit: new BN(1),
  });

  await execution_data.connAccountMap.ownerAccount.functionCall({
    contractId: execution_data.connAccountMap.gameAccount.accountId,
    methodName: "insert_token_price",
    args: {
      currency: execution_data.connAccountMap.nekoTokenAccount.accountId,
      price: '1000000',
    },
    attachedDeposit: new BN(1),
  });

  await execution_data.connAccountMap.ownerAccount.functionCall({
    contractId: execution_data.connAccountMap.gameAccount.accountId,
    methodName: "insert_token_price",
    args: {
      currency: execution_data.connAccountMap.auroraTokenAccount.accountId,
      price: '1000000',
    },
    attachedDeposit: new BN(1),
  });

  console.log('setup.js: Mint all game clues');

  const promises = [];

  for (let i = 0; i < totalClues; i++) {
    promises.push(execution_data.connAccountMap.ownerAccount.functionCall({
      contractId: execution_data.connAccountMap.gameAccount.accountId,
      methodName: 'mint',
      args: {
        token_id: `${i}`,
        token_metadata: {
          title: "mmc bolinho",
          description: null,
          media: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRwa4LMJNbjO_w-DrS8F4Wz_KX3zHaxZpurSbi9re9xaEA32c7ERSOrkfyL-AIb2KpQYGU&usqp=CAU",
          extra: null,
          copies: null,
          issued_at: null,
          reference: null,
          starts_at: null,
          updated_at: null,
          expires_at: null,
          media_hash: null,
          reference_hash: null
        },
      },
      attachedDeposit: new BN("10000000000000000000000"),
      gas: new BN(300000000000000),
    }));
  }

  try {
    await Promise.all(promises);
  } catch (e) {
    console.warn(e);
  }

  const storagePromises = [];

  console.log('setup.js: Deposit storage for all testers');

  for (let i = 0; i < testers.length; i++) {
    let accountId = testers[i];

    storagePromises.push(execution_data.connAccountMap.ownerAccount.functionCall({
      contractId: execution_data.connAccountMap.usdtTokenAccount.accountId,
      methodName: 'storage_deposit',
      args: {
        account_id: accountId,
        registration_only: true,
      },
      attachedDeposit: new BN("10000000000000000000000"),
      gas: new BN(300000000000000),
    }));

    storagePromises.push(execution_data.connAccountMap.ownerAccount.functionCall({
      contractId: execution_data.connAccountMap.nekoTokenAccount.accountId,
      methodName: 'storage_deposit',
      args: {
        account_id: accountId,
        registration_only: true,
      },
      attachedDeposit: new BN("10000000000000000000000"),
      gas: new BN(300000000000000),
    }));

    storagePromises.push(execution_data.connAccountMap.ownerAccount.functionCall({
      contractId: execution_data.connAccountMap.auroraTokenAccount.accountId,
      methodName: 'storage_deposit',
      args: {
        account_id: accountId,
        registration_only: true,
      },
      attachedDeposit: new BN("10000000000000000000000"),
      gas: new BN(300000000000000),
    }));
  }

  try {
    await Promise.all(storagePromises);
  } catch (e) {
    console.warn(e);
  }

  const tokenPromises = [];

  console.log("setup.js: Mint NFT's and send tokens for all account testers");

  for (let i = 0; i < testers.length; i++) {
    let accountId = testers[i];

    tokenPromises.push(execution_data.connAccountMap.ownerAccount.functionCall({
      contractId: execution_data.connAccountMap.usdtTokenAccount.accountId,
      methodName: 'ft_transfer',
      args: {
        receiver_id: accountId,
        registration_only: true,
        amount: '500000000000',
        memo: null,
      },
      attachedDeposit: new BN(1),
      gas: new BN(300000000000000),
    }));

    tokenPromises.push(execution_data.connAccountMap.ownerAccount.functionCall({
      contractId: execution_data.connAccountMap.nekoTokenAccount.accountId,
      methodName: 'ft_transfer',
      args: {
        receiver_id: accountId,
        registration_only: true,
        amount: '500000000000',
        memo: null,
      },
      attachedDeposit: new BN(1),
      gas: new BN(300000000000000),
    }));

    tokenPromises.push(execution_data.connAccountMap.ownerAccount.functionCall({
      contractId: execution_data.connAccountMap.auroraTokenAccount.accountId,
      methodName: 'ft_transfer',
      args: {
        receiver_id: accountId,
        registration_only: true,
        amount: '500000000000',
        memo: null,
      },
      attachedDeposit: new BN(1),
      gas: new BN(300000000000000),
    }));

    for (let i = 0; i < totalClues / 2; i++) {
      tokenPromises.push(execution_data.connAccountMap.ownerAccount.functionCall({
        contractId: execution_data.connAccountMap.detectives.accountId,
        methodName: 'nft_mint',
        args: {
          receiver_id: accountId,
        },
        attachedDeposit: new BN("10000000000000000000000"),
        gas: new BN(300000000000000),
      }));
    }
  }

  try {
    await Promise.all(tokenPromises);
  } catch (e) {
    console.warn(e);
  }


  //Add the rewards for guessing
  //insert_guess_reward_amount(&mut self, rewards: U128) - rewards should be 1/3 of the max rewards

  console.log("setup.js: Adding the rewards for the guesses");

  await execution_data.connAccountMap.ownerAccount.functionCall({
    contractId: execution_data.connAccountMap.gameAccount.accountId,
    methodName: "insert_guess_reward_amount",
    args: {
      rewards: '500',
    },
    attachedDeposit: new BN(1),
  });

  //Insert the mistery answer - might need to change to be adequate with the front-end answer
  //insert_mistery_answer(&mut self, guess: Guess) {
  console.log("setup.js: Inserting the answer to the mistery");

  //create the guess object - random number can be ignored 
  let guess = {
    account_id: execution_data.connAccountMap.ownerAccount.accountId,
    murderer: "John",
    weapon: "Glock",
    motive: "Jealous",
    random_number: "1"
  };


  await execution_data.connAccountMap.ownerAccount.functionCall({
    contractId: execution_data.connAccountMap.gameAccount.accountId,
    methodName: "insert_mistery_answer",
    args: {
      guess
    },
    attachedDeposit: new BN(1),
  });

  //Insert clue ranking - loop trough the clues and add the amount of rewards each is elegible to 
  //pub fn insert_clue_raniking(&mut self, token_id: TokenId, rewards: U128) 
  console.log("setup.js: Ranking the clues");

  for (let i = 0; i < totalClues; i++) {
    promises.push(execution_data.connAccountMap.ownerAccount.functionCall({
      contractId: execution_data.connAccountMap.gameAccount.accountId,
      methodName: 'insert_clue_raniking',
      args: {
        token_id: `${i}`,
        rewards: `${(i * 100)}`,
      },
      attachedDeposit: new BN(1),
      gas: new BN(300000000000000),
    }));
  }

  try {
    await Promise.all(promises);
  } catch (e) {
    console.warn(e);
  }


  const ownerCredentials = JSON.parse(
    fs.readFileSync(`../.near-credentials/testnet/${random_prefix}owner.testnet.json`),
  );

  console.log(execution_data.accountMap);
  console.log('Owner Credentials', ownerCredentials)
}

module.exports = { testnetSetup };
