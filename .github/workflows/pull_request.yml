name: Pull Request

on: pull_request

concurrency:
  group: pull_request-${{ github.ref }} # TODO: validate
  cancel-in-progress: true

jobs:
  # TODO: We should consider some way to share the image between the jobs faster. It's wasteful that we just built the image
  # but another job will need to pull it from the Container Registry.
  # Look into: https://github.com/docker/build-push-action/blob/master/docs/advanced/share-image-jobs.md
  build-and-push-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # db
          - dockerfile: ./packages/db/Dockerfile
            image: ghcr.io/${{ github.repository }}/db

          # back
          - dockerfile: ./packages/back/Dockerfile
            image: ghcr.io/${{ github.repository }}/back

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@v4 # TODO: re-evaluate this version
        with:
          images: ${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  contracts-tests:
    runs-on: ubuntu-latest
    container: rust:1.65 # TODO: consider creating a Dev Container, not only for CI but for other purposes as well (e.g. local testing)
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Add WASM target
        run: rustup target add wasm32-unknown-unknown

      - name: Unit tests
        run: |
          cd packages/contracts
          cargo test
      
      - name: Integration tests
        run: |
          cd packages/contracts
          cargo build --target wasm32-unknown-unknown --release
          cd tests
          cargo test

  cypress-run:
    runs-on: ubuntu-latest
    container: node:18
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install Yarn Globally
        run: npm install -g yarn

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          record: false
          browser: chrome
          install-command: yarn
          build: yarn front build
          start: yarn front dev

  back-tests:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    container:
      image: node:18 # TODO: consider creating a Dev Container, not only for CI but for other purposes as well (e.g. local testing)
      ports:
        - 65432 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install package dependencies
        run: |
          cd packages/back
          yarn

      - name: Unit tests
        run: |
          cd packages/back
          yarn test
      
      - name: Integration tests
        run: |
          cd packages/back
          yarn test:e2e
