name: CI

on: pull_request

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # We should consider: https://github.com/docker/build-push-action/blob/master/docs/advanced/share-image-jobs.md
  build-push-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get tag
        id: tag
        run: echo  "::set-output name=tag::$(git describe --tags HEAD)"

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push (back)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: packages/back/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}/back:${{ steps.tag.outputs.tag }}
          outputs: type=docker,dest=/tmp/back.tar

      - name: Build and push (db)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: packages/db/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}/db:${{ steps.tag.outputs.tag }}
          outputs: type=docker,dest=/tmp/db.tar
          
  check-build-and-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup component add rustfmt
          rustup target add wasm32-unknown-unknown

      - name: Install Yarn Globally
        run: npm install -g yarn

      - name: Installing Dependencies
        run: yarn

      - name: Rust Tests
        run: yarn contracts test:rust

      - name: Lib Tests
        run: yarn contracts test:lib

  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install Yarn Globally
        run: npm install -g yarn

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          record: false
          browser: chrome
          install-command: yarn
          build: yarn front build
          start: yarn front dev

  back-tests:
    needs: build-push-images
    runs-on: ubuntu-latest
    container: ghcr.io/hack-a-chain-software/mmc.project/back:latest
    steps:
      - name: Unit tests
        run: yarn test
      
      - name: Integration tests
        run: yarn test:e2e
