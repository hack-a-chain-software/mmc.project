services:
  back:
    image: ghcr.io/hack-a-chain-software/mmc.project/back:latest
    build:
      context: .
      dockerfile: ./packages/back/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - PORT=8081

      - NODE_ENV=${NODE_ENV}

      - ACCOUNT_ID=${ACCOUNT_ID}
      - NEAR_NETWORK=${NEAR_NETWORK}
      - NEAR_NODE_URL=${NEAR_NODE_URL}
      - ACCOUNT_KEYPAR=${ACCOUNT_KEYPAR}

      - CLUES_CONTRACT=${CLUES_CONTRACT}
      - GUESS_CONTRACT=${GUESS_CONTRACT}

      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_HOST}
      - DB_PASSWORD={DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - SSL_CERT=${SSL_CERT}

      - JWT_VALID_FOR_S=180
      - JWT_SECRET=${JWT_SECRET}

      - AUTH_MESSAGE_VALID_FOR_MS=60000
    networks:
      - mmc
    depends_on:
      - db
      - contracts

  contracts:
    image: ghcr.io/hack-a-chain-software/mmc.project/contracts:latest
    build:
      context: ./packages/contracts/
    networks:
      - mmc

  db:
    image: postgres:14.5-bullseye
    user: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MMC_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./packages/db/src/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - mmc

volumes:
  pg_data:


networks:
  mmc: {}
